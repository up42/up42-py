{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"CHANGELOG/","title":"Changelog","text":"<p>Update your installation to the latest version with the following command:</p> pipconda <pre><code>pip install up42-py --upgrade\n</code></pre> <pre><code>conda update -c conda-forge up42-py\n</code></pre> <p>You can check your current version with the following command:</p> pipconda <pre><code>pip show up42-py\n</code></pre> <pre><code>conda search up42-py\n</code></pre> <p>For more information, see UP42 Python package description.</p>"},{"location":"CHANGELOG/#104a5","title":"1.0.4a5","text":"<p>May 30, 2024</p> <ul> <li>Move webhooks related code from <code>base.py</code></li> </ul>"},{"location":"CHANGELOG/#104a4","title":"1.0.4a4","text":"<p>May 29, 2024</p> <ul> <li>Delegated webhook repr to its info</li> <li>Improved test coverage for webhooks</li> <li>Dropped unneeded shared and global fixtures for webhook tests</li> </ul>"},{"location":"CHANGELOG/#104a3","title":"1.0.4a3","text":"<p>May 27, 2024</p> <ul> <li>Added <code>Session</code> and <code>WorkspaceId</code> descriptors to provide access to session and workspace_id from other classes.</li> <li>Renaming <code>main</code> module to <code>base</code>.</li> </ul>"},{"location":"CHANGELOG/#104a2","title":"1.0.4a2","text":"<p>May 24, 2024</p> <ul> <li>Added workspace singleton in <code>main.py</code>, encapsulating global state (auth, workspace id).</li> <li>Inject auth and workspace id instead of passing a containing object.</li> </ul>"},{"location":"CHANGELOG/#104a1","title":"1.0.4a1","text":"<p>May 24, 2024 - Bumped dependencies <code>requests</code> from 2.31.0 to 2.32.0.</p>"},{"location":"CHANGELOG/#103","title":"1.0.3","text":"<p>May 23, 2024 - Added tenacity as dependency. - Added resilience on <code>asset::stac_info</code> and <code>asset::stac_items</code> - Dropped pystac client subclassing - Cleaned up fixtures - Improved test coverage - Dropped unneeded exposure of token</p>"},{"location":"CHANGELOG/#103a1","title":"1.0.3a1","text":"<p>May 23, 2024 - Added tenacity as dependency. - Added resilience on <code>asset::stac_info</code> and <code>asset::stac_items</code> - Dropped pystac client subclassing - Cleaned up fixtures - Improved test coverage - Dropped unneeded exposure of token</p>"},{"location":"CHANGELOG/#102","title":"1.0.2","text":"<p>May 15, 2024 - Added thread safety to token retrieval.</p>"},{"location":"CHANGELOG/#102a1","title":"1.0.2a1","text":"<p>May 15, 2024 - Added thread safety to token retrieval.</p>"},{"location":"CHANGELOG/#101","title":"1.0.1","text":"<p>May 13, 2024 - Increased retries and backoff in http resilience. - Fixed bug with temporary storage overfill when downloading archives. - Bumped dependencies jinja2, tqdm, geojson.</p>"},{"location":"CHANGELOG/#101a4","title":"1.0.1a4","text":"<p>May 13, 2024 - geojson dependency bumped from 3.0.1 to 3.1.0 to fix conda python 3.12 installer.</p>"},{"location":"CHANGELOG/#101a3","title":"1.0.1a3","text":"<p>May 7, 2024 - Setting http_adapter default configuration to <code>retries = 5</code> and <code>backoff factor = 1</code></p>"},{"location":"CHANGELOG/#101a2","title":"1.0.1a2","text":"<p>May 7, 2024 - Renamed <code>download_from_gcs_unpack</code> to <code>download_archive</code> - Renamed <code>download_gcs_not_unpack</code> to <code>download_file</code> - Improved test coverage for <code>download_archive</code> - Bug fix in <code>download_archive</code>: use output directory provided for temporary archive storage instead of default temp folder</p>"},{"location":"CHANGELOG/#101a1","title":"1.0.1a1","text":"<p>May 7, 2024 - jinja2 dependency bumped from 3.1.3 to 3.1.4. - tqdm dependency bumped from 4.66.2 to 4.66.3.</p>"},{"location":"CHANGELOG/#100","title":"1.0.0","text":"<p>Apr 17, 2024 - Dropped deprecated functionalities: Jobs, Projects, Workflows, Viztools - Dropped deprecated code related to blocks</p>"},{"location":"CHANGELOG/#100a7","title":"1.0.0a7","text":"<p>Apr 16, 2024 - Dropped <code>get_blocks</code>, <code>get_block_details</code> and <code>get_block_coverage</code> from <code>main.py</code></p>"},{"location":"CHANGELOG/#100a6","title":"1.0.0a6","text":"<p>Apr 16, 2024 - Dropped project id and api key based authentication in <code>main.py</code>, <code>auth.py</code>, <code>http/oauth.py</code> and <code>http/client.py</code> - Adapted tests and fixtures - Dropped viztools.py</p>"},{"location":"CHANGELOG/#100a5","title":"1.0.0a5","text":"<p>Apr 16, 2024</p> <ul> <li>Dropped deprecated Workflow functions - info, workflow_tasks, get_workflow_tasks, get_parameters_info,  _get_default_parameters (internal function), _construct_full_workflow_tasks_dict (internal function),  get_jobs, delete</li> <li>Dropped Workflow tests and fixtures</li> </ul>"},{"location":"CHANGELOG/#100a4","title":"1.0.0a4","text":"<p>Apr 15, 2024</p> <ul> <li>Dropped deprecated Jobtask functions - info, get_results_json, download_results, download_quicklooks</li> <li>Dropped Jobtask tests and fixtures</li> </ul>"},{"location":"CHANGELOG/#100a3","title":"1.0.0a3","text":"<p>Apr 15, 2024</p> <ul> <li>Dropped deprecated Job functions - info, status, is_succeeded, download_quicklooks, get_results_json, download_results, get_logs, upload_results_to_bucket, get_jobtasks, get_jobtasks_results_json, get_credits</li> <li>Dropped Job tests and fixtures</li> </ul>"},{"location":"CHANGELOG/#100a2","title":"1.0.0a2","text":"<p>Apr 15, 2024</p> <ul> <li>Dropped deprecated JobCollection functions - info, status, apply, download_results</li> <li>Dropped deprecated Project functions - info, get_workflows, get_project_settings, get_jobs</li> <li>Dropped Project's fixtures and tests</li> <li>Dropped JobCollection's fixtures and tests</li> <li>Dropped Workflow's get_jobs function</li> </ul>"},{"location":"CHANGELOG/#100a1","title":"1.0.0a1","text":"<p>Apr 15, 2024</p> <ul> <li>Dropped deprecated viztools functions: folium_base_map(), plot_quicklooks(), plot_coverage(), draw_aoi(), _map_images() (internal function), map_quicklooks(), plot_coverage(), plot_results(), requires_viz() (internal function), map_results(), render() (internal function)</li> </ul>"},{"location":"CHANGELOG/#0372","title":"0.37.2","text":"<p>Apr 8, 2024</p> <p>Dependabot security updates:  - Bump black from 22.12.0 to 24.3.0  - Bump pillow from 10.2.0 to 10.3.0</p>"},{"location":"CHANGELOG/#0371","title":"0.37.1","text":"<p>Apr 5, 2024</p> <ul> <li>Removed upper bound for Python 3.12.</li> <li>Dropped support for Python 3.8.</li> <li>New authentication token are retrieved upon expiration instead of every request.</li> <li>Dropped tenacity, requests-oauthlib and types-oauthlib as dependencies.</li> <li>Updated the deprecation date for <code>Jobs</code>, <code>Workflow</code>, and <code>Projects</code> related features.</li> <li>Multiple refactoring improvements.</li> </ul>"},{"location":"CHANGELOG/#0371a11","title":"0.37.1a11","text":"<p>Apr 4, 2024</p> <ul> <li>Added standard headers to <code>http/session.py</code></li> <li>Added session provisioning to <code>auth.py</code> and <code>http/client.py</code></li> <li>Dropped undocumented <code>authenticate</code> flag in <code>auth.py</code></li> <li>Dropped undocumented kwargs in <code>auth.py</code> and <code>main.py</code></li> </ul>"},{"location":"CHANGELOG/#0371a10","title":"0.37.1a10","text":"<p>Apr 3, 2024</p> <ul> <li>Updating the deprecation date for <code>Jobs</code>, <code>Workflow</code>, and <code>Projects</code> related features.</li> </ul>"},{"location":"CHANGELOG/#0371a9","title":"0.37.1a9","text":"<p>Apr 2, 2024</p> <ul> <li>Dropped legacy <code>estimation.py</code>, <code>test_estimation.py</code> and <code>fixtures_estimation.py</code></li> </ul>"},{"location":"CHANGELOG/#0371a8","title":"0.37.1a8","text":"<p>March 28, 2024</p> <ul> <li>Dependency injection and test coverage improvement in <code>auth.py</code></li> </ul>"},{"location":"CHANGELOG/#0371a7","title":"0.37.1a7","text":"<p>March 27, 2024</p> <ul> <li>Raise typed error if token retrieval fails due to wrong credentials.</li> </ul>"},{"location":"CHANGELOG/#0371a6","title":"0.37.1a6","text":"<p>March 26, 2024</p> <ul> <li>Switched to using <code>http.client.Client</code> in <code>auth.py</code> for authentication and token management</li> <li>Dropped unneeded resiliency code</li> <li>Dropped tenacity, requests-oauthlib and types-oauthlib as unneeded dependencies</li> </ul>"},{"location":"CHANGELOG/#0371a5","title":"0.37.1a5","text":"<p>March 21, 2024</p> <ul> <li>Run test pipeline on Python versions 3.9 to 3.12</li> <li>Removed upper bound for Python 3.12</li> <li>Dropped support for Python 3.8</li> </ul>"},{"location":"CHANGELOG/#0371a4","title":"0.37.1a4","text":"<p>March 21, 2024</p> <ul> <li>New http stack client to provide resilient token and requests compliant authentication.</li> </ul>"},{"location":"CHANGELOG/#0371a3","title":"0.37.1a3","text":"<p>March 20, 2024</p> <ul> <li>Detection of token retriever based on supplied settings.</li> </ul>"},{"location":"CHANGELOG/#0371a2","title":"0.37.1a2","text":"<p>March 19, 2024</p> <ul> <li>Detection of credentials settings based on supplied credentials.</li> </ul>"},{"location":"CHANGELOG/#0371a1","title":"0.37.1a1","text":"<p>March 19, 2024</p> <ul> <li>Dropped all the live tests.</li> </ul>"},{"location":"CHANGELOG/#0370","title":"0.37.0","text":"<p>March 15, 2024</p> <ul> <li>Fixed inadvertent title and tags removals during asset metadata updates.</li> <li>Dropped unneeded <code>auth::env</code> property and the corresponding tests.</li> <li>Generalized new authentication stack to cover account authentication case.</li> <li>Added new components within the HTTP layer to facilitate future enhancements in authentication and request processes.</li> <li>Adjusted most of the code in accordance with pylint checks.</li> </ul>"},{"location":"CHANGELOG/#0370a14","title":"0.37.0a14","text":"<p>March 15, 2024</p> <ul> <li>Fixed inadvertent titles and tags removals during asset metadata updates.</li> </ul>"},{"location":"CHANGELOG/#0370a13","title":"0.37.0a13","text":"<p>March 15, 2024</p> <ul> <li>Dropped unneeded <code>auth::env</code> property and the corresponding tests.</li> </ul>"},{"location":"CHANGELOG/#0370a12","title":"0.37.0a12","text":"<p>March 14, 2024</p> <ul> <li>Adjusted <code>initialization.py</code>, <code>test_initialization.py</code>, <code>main.py</code> and <code>test_main.py</code> in accordance with Pylint checks.</li> </ul>"},{"location":"CHANGELOG/#0370a11","title":"0.37.0a11","text":"<p>March 14, 2024</p> <ul> <li>Adjusted <code>asset.py</code>, <code>asset_searcher.py</code>, <code>test_asset.py</code> and <code>fixtures_asset.py</code> in accordance with Pylint checks.</li> <li>Adjusted <code>test_http_adapter.py</code> in accordance with Pylint checks.</li> <li>Dropped <code>test_e2e_catalog.py</code> since it is covered by SDK tests.</li> <li>Fixed a flaky test in <code>test_session.py</code></li> </ul>"},{"location":"CHANGELOG/#0370a10","title":"0.37.0a10","text":"<p>March 13, 2024</p> <ul> <li>Adjusted <code>webhooks.py</code>, <code>test_webhooks.py</code> and <code>fixtures_webhook.py</code> in accordance with Pylint checks.</li> <li>Dropped <code>test_e2e_30sec.py</code> since it covers functionality dropped earlier.</li> </ul>"},{"location":"CHANGELOG/#0370a9","title":"0.37.0a9","text":"<p>March 13, 2024</p> <ul> <li>Adjusted <code>macros.py</code>, <code>utils.py</code>, and <code>test_utils.py</code> in accordance with Pylint checks.</li> </ul>"},{"location":"CHANGELOG/#0370a8","title":"0.37.0a8","text":"<p>March 13, 2024</p> <ul> <li>Adjusted <code>estimation.py</code>, <code>test_estimation.py</code> and <code>fixtures_estimation.py</code> in accordance with Pylint checks.</li> </ul>"},{"location":"CHANGELOG/#0370a7","title":"0.37.0a7","text":"<p>March 13, 2024</p> <ul> <li>Adjusted <code>order.py</code>, <code>test_order.py</code> and <code>fixtures_order.py</code> in accordance with Pylint checks.</li> </ul>"},{"location":"CHANGELOG/#0370a6","title":"0.37.0a6","text":"<p>March 13, 2024</p> <ul> <li>Adjusted <code>host.py</code>, <code>tools.py</code>, <code>test_tools.py</code>, <code>storage.py</code>, <code>test_storage.py</code> and <code>fixtures_storage.py</code> in accordance with Pylint checks.</li> </ul>"},{"location":"CHANGELOG/#0370a5","title":"0.37.0a5","text":"<p>March 11, 2024</p> <ul> <li>Adjusted <code>auth.py</code> and <code>oauth.py</code> with their coverage and fixtures in accordance with Pylint checks.</li> <li>Adjusted <code>conftest.py</code> in accordance with Pylint checks.</li> </ul>"},{"location":"CHANGELOG/#0370a4","title":"0.37.0a4","text":"<p>March 07, 2024</p> <ul> <li>Generalized new authentication stack to cover account authentication case.</li> </ul>"},{"location":"CHANGELOG/#0370a3","title":"0.37.0a3","text":"<p>March 07, 2024</p> <ul> <li>Adjusted <code>tasking.py</code>, <code>test_tasking.py</code>, and <code>fixtures_tasking.py</code> in accordance with Pylint checks.</li> </ul>"},{"location":"CHANGELOG/#0370a2","title":"0.37.0a2","text":"<p>March 06, 2024</p> <ul> <li>Adjusted <code>catalog.py</code> and <code>test_catalog.py</code> in accordance with Pylint checks.</li> <li>Conducted minor refactoring in other classes due to changes in function names within the authentication module.</li> </ul>"},{"location":"CHANGELOG/#0370a1","title":"0.37.0a1","text":"<p>March 06, 2024</p> <ul> <li>Added a new component within the HTTP layer to facilitate future enhancements in authentication and request processes: ported a resilient and authenticated cached session.</li> </ul>"},{"location":"CHANGELOG/#0370a0","title":"0.37.0a0","text":"<p>March 04, 2024</p> <p>Added new components within the HTTP layer to facilitate future enhancements in authentication and request processes:</p> <ul> <li>Ported the HTTP adapter, providing configurable resilience.</li> <li>Ported resilient project authentication, managing token expiration.</li> </ul>"},{"location":"CHANGELOG/#0360","title":"0.36.0","text":"<p>February 20, 2024</p> <ul> <li>Updated the <code>place_order()</code> and <code>estimate_order()</code> functions of the CatalogBase class to the latest version of the API.</li> </ul>"},{"location":"CHANGELOG/#0350","title":"0.35.0","text":"<p>January 25, 2024</p> <ul> <li> <p>Discontinued support for the following edit and create functions:</p> <ul> <li> <p>up42:</p> <ul> <li><code>validate_manifest()</code></li> </ul> </li> <li> <p>Project:</p> <ul> <li><code>max_concurrent_jobs</code></li> <li><code>update_project_settings()</code></li> <li><code>create_workflow()</code></li> </ul> </li> <li> <p>Workflow:</p> <ul> <li><code>max_concurrent_jobs</code></li> <li><code>update_name()</code></li> <li><code>add_workflow_tasks()</code></li> <li><code>get_compatible_blocks()</code></li> <li><code>get_parameters_info()</code></li> <li><code>construct_parameters()</code></li> <li><code>construct_parameters_parallel()</code></li> <li><code>estimate_job()</code></li> <li><code>test_job()</code></li> <li><code>test_jobs_parallel()</code></li> <li><code>run_job()</code></li> <li><code>run_jobs_parallel()</code></li> </ul> </li> <li> <p>Job:</p> <ul> <li><code>track_status()</code></li> <li><code>cancel_job()</code></li> </ul> </li> </ul> </li> <li> <p>Marked the following visualization functions as deprecated:</p> <ul> <li> <p>up42:</p> <ul> <li><code>viztools.folium_base_map()</code></li> </ul> </li> <li> <p>Catalog:</p> <ul> <li><code>plot_coverage()</code></li> <li><code>map_quicklooks()</code></li> <li><code>plot_quicklooks()</code></li> </ul> </li> <li> <p>Job:</p> <ul> <li><code>map_results()</code></li> <li><code>plot_results()</code></li> </ul> </li> <li> <p>JobCollection:</p> <ul> <li><code>map_results()</code></li> <li><code>plot_results()</code></li> </ul> </li> <li> <p>JobTask:</p> <ul> <li><code>map_results()</code></li> <li><code>plot_results()</code></li> <li><code>plot_quicklooks()</code></li> </ul> </li> </ul> <p>They will be discontinued after March 31, 2024.</p> </li> </ul>"},{"location":"CHANGELOG/#0341","title":"0.34.1","text":"<p>December 15, 2023</p> <ul> <li>Restored the <code>order.get_assets</code> function.</li> </ul>"},{"location":"CHANGELOG/#0340","title":"0.34.0","text":"<p>December 13, 2023</p> <ul> <li>Updated the <code>storage.get_orders</code> function to the latest version of the API.</li> <li>Set Poetry as the only dependency manager.</li> <li>Discontinued support for the <code>order.get_assets</code> function.</li> </ul>"},{"location":"CHANGELOG/#0331","title":"0.33.1","text":"<p>November 23, 2023</p> <p>Marked the following parameters of <code>storage.get_assets</code> as deprecated to enforce the use of the PySTAC client search.</p> <ul> <li><code>geometry</code></li> <li><code>acquired_before</code></li> <li><code>acquired_after</code></li> <li><code>custom_filter</code></li> </ul>"},{"location":"CHANGELOG/#0330","title":"0.33.0","text":"<p>November 14, 2023</p> <ul> <li>Updated authentication by changing it from project-based to account-based.</li> <li>Added a new function to the Asset class: <code>get_stac_asset_url</code> generates a signed URL that allows to download a STAC asset from storage without authentication.</li> </ul>"},{"location":"CHANGELOG/#0320","title":"0.32.0","text":"<p>September 7, 2023</p> <p>A new function added to the Asset class:</p> <ul> <li><code>download_stac_asset</code> allows you to download STAC assets from storage.</li> </ul>"},{"location":"CHANGELOG/#0310","title":"0.31.0","text":"<p>August 9, 2023</p> <ul> <li>Supported STAC assets in <code>asset.stac_items</code>.</li> <li>Added substatuses to <code>order.track_status</code>.</li> <li>Limited <code>catalog.search(sort_by)</code> to <code>acquisition_date</code> only.</li> <li>Removed <code>get_credits_history</code> from the main class.</li> <li><code>asset.stac_info</code> now returns the <code>pystac.Collection</code> object.</li> <li>Python 3.7 is no longer supported.</li> </ul>"},{"location":"CHANGELOG/#0301","title":"0.30.1","text":"<p>July 14, 2023</p> <p>Fixed the failing construct_order_parameters function and updated tests.</p>"},{"location":"CHANGELOG/#0300","title":"0.30.0","text":"<p>July 3, 2023</p> <p>Added a new <code>tags</code> argument to the following functions:</p> <ul> <li><code>construct_order_parameters</code>, to assign tags to new tasking and catalog orders.</li> <li><code>get_order</code>, to filter orders by tags.</li> <li><code>get_assets</code>, to filter assets by tags.</li> </ul>"},{"location":"CHANGELOG/#0290","title":"0.29.0","text":"<p>June 20, 2023</p> <p>Integrated new functions into the Tasking class:</p> <ul> <li><code>get_feasibility</code> \u2014 Returns a list of feasibility studies for tasking orders.</li> <li><code>choose_feasibility</code> \u2014 Allows accepting one of the proposed feasibility study options.</li> <li><code>get_quotations</code> \u2014 Returns a list of all quotations for tasking orders.</li> <li><code>decide_quotation</code> \u2014 Allows accepting or rejecting a quotation for a tasking order.</li> </ul>"},{"location":"CHANGELOG/#0281","title":"0.28.1","text":"<p>April 6, 2023</p> <ul> <li>Updating test to latest version</li> </ul>"},{"location":"CHANGELOG/#0280","title":"0.28.0","text":"<p>February 17, 2023</p> <ul> <li>Added STAC search functionality to storage.get_assets.   Now you can filter assets by new parameters: <code>geometry</code>, <code>acquired_after</code>, <code>acquired_before</code>,   <code>collection_names</code>, <code>producer_names</code>, <code>tags</code>, <code>search</code>, <code>sources</code>.</li> <li>Added storage.pystac_client.   Use it to authenticate PySTAC client to access your UP42 storage assets using its library.</li> <li>Added asset.stac_info.   Use it to access STAC metadata, such as acquisition, sensor, and collection information.</li> </ul>"},{"location":"CHANGELOG/#0271","title":"0.27.1","text":"<p>January 26, 2023</p> <ul> <li>Improve error communication of functions using API v2 endpoints.</li> <li>add <code>up42.__version__</code> attribute to access the package version with Python.</li> <li>Adapt asset class attributes (<code>created</code> to <code>createdAt</code>) to UP42 API.</li> </ul>"},{"location":"CHANGELOG/#0270","title":"0.27.0","text":"<p>December 12, 2022</p> <ul> <li>Add <code>asset.update_metadata()</code> for adjusting title &amp; tags of an asset.</li> <li><code>storage.get_assets()</code> has new parameters <code>created_after</code>, <code>created_before</code>, <code>workspace_id</code>  to better filter the   desired assets. It now queries the assets of all accessible workspaces by default.</li> <li>Adopt new UP42 API 2.0 endpoints for user storage &amp; assets.</li> </ul>"},{"location":"CHANGELOG/#0260","title":"0.26.0","text":"<p>November 2, 2022</p> <ul> <li>Remove Python version upper bound, this will enable immediate but untested installation with any new Python version.</li> <li>Changes to <code>workflow.construct_parameters</code>:</li> <li>Deprecates the <code>assets</code> parameter (list of asset objects), instead use <code>asset_ids</code> (list of asset_ids).</li> <li>Removes limitation of using only assets originating from blocks, now also supports assets from catalog &amp;     tasking.</li> <li>In addition to required parameters, now adds all optional parameters that have default values.</li> <li><code>tasking.construct_order_parameters</code> now accepts a Point feature (e.g. use with Blacksky).</li> <li>Fix: <code>get_data_products</code> with <code>basic=False</code> now correctly returns only tasking OR catalog products.</li> <li>The up42 object now correctly does not give access to third party imports anymore (restructured init module).</li> </ul>"},{"location":"CHANGELOG/#0250","title":"0.25.0","text":"<p>October 25, 2022</p> <ul> <li>Add dedicated tasking class for improved handling of satellite tasking orders.</li> <li><code>construct_order_parameters</code> now also adds the parameters specific to the selected data-product, and suggests   possible values based on the data-product schema.</li> </ul>"},{"location":"CHANGELOG/#0240","title":"0.24.0","text":"<p>October 20, 2022</p> <ul> <li>Add <code>catalog.get_data_product_schema()</code> for details on the order parameters</li> <li>Switches parameter <code>sensor</code> to <code>collection</code> in <code>catalog.download_quicklooks</code>.</li> <li>Various small improvements e.g. quicklooks automatic band selection, Reduced use of default parameters in   constructor methods, error message display, optimized API call handling for parameter validation etc.</li> <li>Internal: Separation of Catalog and CatalogBase to prepare addition of Tasking class, reorganize test fixtures.</li> </ul>"},{"location":"CHANGELOG/#0231","title":"0.23.1","text":"<p>October 5, 2022</p> <ul> <li>Fixes issue with filename of downloaded assets containing two suffix <code>.</code> e.g. <code>./output..zip</code>.   Resolves #350</li> </ul>"},{"location":"CHANGELOG/#0230","title":"0.23.0","text":"<p>September 20, 2022</p> <ul> <li>Integrates the UP42 data productsm e.g. the selection \"Display\" and \"Reflectance\" configuration in the ordering process. The new ordering process requires the selection of a specific data product.</li> <li>The <code>order_parameters</code> argument for <code>catalog.estimate_order</code> and <code>catalog.place_order</code> now has a different structure.   The previous option to just specify the collection name will soon be deactivated in the UP42 API!</li> <li>New function <code>catalog.get_data_products</code></li> <li>New function <code>catalog.construct_order_parameters</code></li> <li><code>catalog.construct_search_parameters</code> replaces <code>catalog.construct_parameters</code> which is deprecated and will be   removed in v0.25.0</li> </ul>"},{"location":"CHANGELOG/#0222","title":"0.22.2","text":"<p>July 21, 2022</p> <ul> <li>Fix unpacking of order assets if no output topfolder inherent in archive</li> </ul>"},{"location":"CHANGELOG/#0221","title":"0.22.1","text":"<p>July 19, 2022</p> <ul> <li>Fix conda release (include requirements-viz file)</li> </ul>"},{"location":"CHANGELOG/#0220","title":"0.22.0","text":"<p>July 5, 2022</p> <ul> <li>Adds webhooks functionality to the SDK, see new webhooks docs chapter.</li> <li>Introduces optional installation option for the visualization functionalities. The required dependencies are now   not installed by default.</li> <li>Removes <code>order.metadata</code> property, as removed from UP42 API.</li> <li>Fix: Using a MultiPolygon geometry in construct_parameters will now correctly raise an error as not accepted.</li> <li>Documentation overhaul &amp; various improvements</li> </ul>"},{"location":"CHANGELOG/#0210","title":"0.21.0","text":"<p>May 12, 2022</p> <ul> <li>Adding <code>up42.get_balance</code> and <code>up42.get_credits_history</code> features for allowing account information retrieval.</li> <li>Adding <code>up42.get_block_coverage</code> features for retrieval of the catalog blocks' coverage as GeoJSON.</li> <li><code>project.get_jobs</code> now has sorting criteria, sorting order and limit parameters.</li> <li>Catalog search now enables search for Pleiades Neo etc. (uses host specific API endpoints)</li> <li>Fix: <code>project.get_jobs</code> now correctly queries the full number of jobs.</li> </ul>"},{"location":"CHANGELOG/#0202","title":"0.20.2","text":"<p>April 10, 2022</p> <ul> <li>Update documentation</li> <li>Non functional changes to enable conda release</li> <li>Update requirements and removing overlapping subdependencies</li> </ul>"},{"location":"CHANGELOG/#0201","title":"0.20.1","text":"<p>April 5, 2022</p> <ul> <li>Update documentation for latest changes on the user console.</li> <li>Remove outdated examples.</li> <li>Add required files on the dist version for allowing creation of conda meta files.</li> </ul>"},{"location":"CHANGELOG/#0200","title":"0.20.0","text":"<p>February 15, 2022</p> <ul> <li>Enables getting credits consumed by a job via <code>job.get_credits</code>.</li> </ul>"},{"location":"CHANGELOG/#0190","title":"0.19.0","text":"<p>January 28, 2022</p> <ul> <li>Add support for UP42 data collections via <code>catalog.get_collections</code>.</li> <li>Switch <code>catalog.construct_parameters</code> to use <code>collection</code> instead of <code>sensor</code> for   the collection selection.</li> <li>Refactor retry mechanism. Resolves issue of unintended token renewals &amp; further limits   retries.</li> </ul>"},{"location":"CHANGELOG/#0181","title":"0.18.1","text":"<p>December 20, 2021</p> <ul> <li>Allow installation with Python 3.9</li> </ul>"},{"location":"CHANGELOG/#0180","title":"0.18.0","text":"<p>November 10, 2021</p> <ul> <li>Add sorting criteria, sorting order and results limit parameters to <code>storage.get_orders</code>   and <code>storage.get_assets</code>. Now also uses results pagination which avoids timeout issues   when querying large asset/order collections.</li> <li>Significant speed improvement for:     -<code>.get_jobs</code>, <code>.get_workflows</code>, <code>.get_assets</code>, <code>.get_orders</code> calls.<ul> <li><code>workflow.create_workflow</code> when used with <code>existing=True</code>.</li> <li>Printing objects representations, which now does not trigger additional object info API calls.</li> </ul> </li> <li>Removal: Removes deprecated handling of multiple features as input geometry in <code>.construct_parameters</code>   Instead, using multiple features or a MultiPolygon will now raise an error.   This aligns the Python SDK with the regular UP42 platform behaviour.</li> <li>Removal: Remove the Python SDK Command Line Interface.</li> <li>Fix: JobTask.info and the printout now uses the correct jobtask information.</li> </ul>"},{"location":"CHANGELOG/#0170","title":"0.17.0","text":"<p>September 10, 2021</p> <ul> <li>Adds <code>usage_type</code> parameter for selection of \"DATA\" and \"ANALYTICS\" data in catalog search.</li> <li>Adds automatic handling of catalog search results pagination when requesting more   than 500 results.</li> <li>Adds support for datetime objects and all iso-format compatible time strings to   <code>construct_parameters</code>.</li> <li>Fix: <code>get_compatible_blocks</code> with an empty workflow now returns all data blocks.</li> <li>Start deprecation for <code>handle_multiple_features</code> parameter in <code>construct_parameters</code> to   guarantee parity with UP42 platform. In the future, the UP42 SDK will only handle   single geometries.</li> <li>Uses Oauth for access token handling.</li> </ul>"},{"location":"CHANGELOG/#0160","title":"0.16.0","text":"<p>June 30, 2021</p> <ul> <li>Limit memory usage for large file downloads (#237)</li> <li>Remove deprecated job.get_status() (Replace by job.status) (#224)</li> <li>Remove deprecated jobcollection.get_job_info() and jobcollection.get_status() (Replaced by jobcollection.info and jobcollection.status)</li> <li>Remove order-id functionality (#228)</li> <li>Limit installation to Python &lt;=3.9.4</li> <li>Internal code improvements (e.g. project settings, retry)</li> </ul>"},{"location":"CHANGELOG/#0152","title":"0.15.2","text":"<p>April 7, 2021</p> <ul> <li>Enables plotting of jobcollection with <code>.map_results()</code>.</li> <li>Fixes <code>.cancel_job()</code> functionality.</li> </ul>"},{"location":"CHANGELOG/#0151","title":"0.15.1","text":"<p>March 12, 2021</p> <ul> <li>Fixes breaking API change in catalog search.</li> <li>Catalog search result now contains a <code>sceneId</code> property instead of <code>scene_id</code>.</li> </ul>"},{"location":"CHANGELOG/#0150","title":"0.15.0","text":"<p>January 27, 2021</p> <ul> <li>Add <code>Storage</code>, <code>Order</code> and <code>Asset</code> objects.</li> <li>Add possibility to create orders from <code>Catalog</code> with <code>Catalog.place_order</code>.</li> <li>Add possibility to use assets in job parameters with <code>Workflow.construct_paramaters</code>.</li> <li>Update job estimation endpoint.</li> <li>Multiple documentation fixes.</li> </ul>"},{"location":"CHANGELOG/#0140","title":"0.14.0","text":"<p>December 7, 2020</p> <ul> <li>Add <code>workflow.estimate_job()</code> function for estimation of credit costs &amp; job duration before running a job.</li> <li>Add <code>bands=[3,2,1]</code> parameter in <code>.plot_results()</code> and <code>.map_results()</code> for band &amp; band order selection.</li> <li><code>.plot_results()</code> now accepts kwargs of rasterio.plot.show and matplotlib.</li> <li>Add <code>up42.initialize_jobcollection()</code></li> <li>Add <code>get_estimation=False</code> parameter to <code>workflow.test_job</code>.</li> <li>Add ship-identification example.</li> <li>Overhaul \"Getting started\" examples.</li> </ul>"},{"location":"CHANGELOG/#0131","title":"0.13.1","text":"<p>November 18, 2020</p> <ul> <li>Handle request rate limits via retry mechanism.</li> <li>Limit <code>map_quicklooks()</code> to 100 quicklooks.</li> <li>Add aircraft detection example &amp; documentation improvements.</li> </ul>"},{"location":"CHANGELOG/#0130","title":"0.13.0","text":"<p>October 30, 2020</p> <ul> <li>New consistent use &amp; documentation of the basic functionality:<ul> <li>All basic functions (e.g. <code>up42.get_blocks</code>) are accessible     from the <code>up42</code> import object. Now consistently documented in the <code>up42</code> object code reference.</li> <li>The option to use this basic functionality from any lower level object will soon be     removed (e.g. <code>project.get_blocks</code>, <code>workflow.get_blocks</code>). Now triggers a deprecation warning.</li> </ul> </li> <li>The plotting functionality of each object is now documented directly in that object's code reference.</li> <li>Fix: Repair catalog search for sobloo.</li> <li>Various improvements to docs &amp; code reference.</li> <li>Overhaul &amp; simplify test fixtures.</li> <li>Split off viztools module from tools module.</li> </ul>"},{"location":"CHANGELOG/#0120","title":"0.12.0","text":"<p>October 14, 2020</p> <ul> <li>Simplify object representation, also simplifies logger messages.</li> <li>Add <code>.info</code> property to all objects to get the detailed object information, deprecation process for <code>.get_info</code>.</li> <li>Add <code>.status</code> property to job, jobtask and jobcollection objects. Deprecation process for <code>.get_status</code>.</li> <li>Add selection of job mode for <code>.get_jobs</code>.</li> <li>Add description of initialization of each object to code reference.</li> <li>Fix: Use correct cutoff time 23:59:59 in default datetimes.</li> <li>Fix: Download jobtasks to respective jobtask subfolders instead of the job folder.</li> <li>Unpin geopandas version in requirements.</li> <li>Move sdk documentation to custom subdomain \"sdk.up42.com\".</li> <li>Simplify mock tests &amp; test fixtures</li> </ul>"},{"location":"CHANGELOG/#0110","title":"0.11.0","text":"<p>August 13, 2020</p> <ul> <li>Fix: Remove buffer 0 for fixing invalid geometry.</li> <li>Add <code>.map_quicklooks</code> method for visualising quicklooks interactively.</li> <li>Add an example notebook for mapping quicklooks using <code>.map_quicklooks</code> method.</li> </ul>"},{"location":"CHANGELOG/#0101","title":"0.10.1","text":"<p>August 13, 2020</p> <ul> <li>Hotfix: Fixes usage of multiple features as the input geometry.</li> </ul>"},{"location":"CHANGELOG/#0100","title":"0.10.0","text":"<p>August 7, 2020</p> <ul> <li>Add parallel jobs feature. Allows running jobs for multiple geometries, scene_ids or  timeperiods in parallel. Adds <code>workflow.construct_parameters_parallel</code>,  <code>workflow.test_job_parallel</code>, <code>workflow.run_job_parallel</code> and the new <code>JobCollection</code> object.</li> <li>Adjusts <code>workflow.get_jobs</code> and <code>project.get_jobs</code> to return JobCollections.</li> <li>Adjusts airports-parallel example notebook to use the parallel jobs feature.</li> <li>Adjusts flood mapping example notebook to use OSM block.</li> <li>Adds option to not unpack results in <code>job.download_results</code>.</li> <li>Now allows passing only scene_ids to <code>workflow.construct_parameters</code>.</li> <li>Improves layout of image results plots for multiple results.</li> <li>Added binder links.</li> <li>Now truncates log messages &gt; 2k characters.</li> <li>Various small improvements &amp; code refactorings.</li> </ul>"},{"location":"CHANGELOG/#093","title":"0.9.3","text":"<p>July 15, 2020</p> <ul> <li>Add support for secondary GeoJSON file to <code>job.map_results</code></li> </ul>"},{"location":"CHANGELOG/#092","title":"0.9.2","text":"<p>July 4, 2020</p> <ul> <li>Fix inconsistency with <code>job.map_results</code> selecting the JSON instead of the image</li> </ul>"},{"location":"CHANGELOG/#091","title":"0.9.1","text":"<p>June 25, 2020</p> <ul> <li>Fixes typo in catalog search parameters</li> </ul>"},{"location":"CHANGELOG/#090","title":"0.9.0","text":"<p>May 7, 2020</p> <ul> <li>Enable block_name and block_display_name for <code>workflow.add_workflow_tasks</code></li> <li>Replace requirement to specify provider by sensor for <code>catalog.download_quicklooks</code></li> <li>Add option to disable logging in <code>up42.settings</code></li> <li>Add <code>project.get_jobs</code> and limit <code>workflow.get_jobs</code> to jobs in the workflow.</li> <li>Fix download of all output files</li> <li>Job name selectabable in <code>workflow.test_job</code> and <code>workflow.run_job</code> (with added suffix _py)</li> <li>Fix CRS issues in make <code>job.map_results</code>, make plotting functionalities more robust</li> </ul>"},{"location":"CHANGELOG/#083","title":"0.8.3","text":"<p>April 30, 2020</p> <ul> <li>Pin geopandas to 0.7.0, package requires new CRS convention</li> </ul>"},{"location":"CHANGELOG/#082","title":"0.8.2","text":"<p>April 24, 2020</p> <ul> <li>Removed <code>job.create_and_run_job</code>, now split into <code>job.test_job</code> and <code>job.run_job</code></li> </ul>"},{"location":"__init__/","title":"init","text":""},{"location":"macros/","title":"Macros","text":"In\u00a0[\u00a0]: Copied! <pre>\"\"\"\nDefine snippets and macros for repeated use via mkdocs-macros plugin.\n\nInclude variables and macros like regular Python expressions, wrapped in double curly brackets:\n{{ some_variable }} or {{ calculation(x=5) }}\n\nInclude external markdown files:\n{% include 'some_folder/some_md_file.md' %}\n\nChanges in macros.py code, for some operations, requires restart of `mkdocs serve`.\n\nDocs: https://mkdocs-macros-plugin.readthedocs.io/en/latest/macros/\n\"\"\"\n</pre> \"\"\" Define snippets and macros for repeated use via mkdocs-macros plugin.  Include variables and macros like regular Python expressions, wrapped in double curly brackets: {{ some_variable }} or {{ calculation(x=5) }}  Include external markdown files: {% include 'some_folder/some_md_file.md' %}  Changes in macros.py code, for some operations, requires restart of `mkdocs serve`.  Docs: https://mkdocs-macros-plugin.readthedocs.io/en/latest/macros/ \"\"\" In\u00a0[\u00a0]: Copied! <pre>import types\nfrom typing import Callable, List, Optional, Union\n</pre> import types from typing import Callable, List, Optional, Union In\u00a0[\u00a0]: Copied! <pre>import up42\n</pre> import up42 In\u00a0[\u00a0]: Copied! <pre>def define_env(env):\n    \"\"\"\n    This is the hook for defining variables, macros and filters.\n    \"\"\"\n\n    def indent(input_string: Optional[str]) -&gt; Optional[str]:\n        return input_string and input_string.replace(\"\\n\", \"\\n\\t\")\n\n    def get_methods(\n        c: Union[Callable, types.ModuleType],\n        exclude: Optional[List[str]] = None,\n    ) -&gt; List[str]:\n        \"\"\"\n        Gets all class methods and properties, excluding specifically excluded ones.\n\n        Args:\n                c: The class object.\n                exclude: Exclude specific methods.\n        \"\"\"\n        property_methods = [name for name, value in vars(c).items() if isinstance(value, property)]\n        function_methods = [\n            name\n            for name in dir(c)\n            if callable(getattr(c, name))\n            and not name.startswith(\"_\")\n            and not name.startswith(\"__\")\n            and not name[0].isupper()\n        ]\n\n        function_methods = function_methods + property_methods\n\n        if exclude:\n            function_methods = [f for f in function_methods if f not in exclude]\n\n        return function_methods\n\n    # pylint: disable=unused-variable\n    @env.macro\n    def format_funcs(function_methods: List[str]) -&gt; str:\n        \"\"\"\n        Formats a list of function names to a formatted list for\n        the \"Available Functionality\" box in the structure chapter.\n        \"\"\"\n        # Two tabs to stay within the tabbed code box.\n        # Requires Python linebreak and markdown linebreak (two spaces)!\n        # \"\\n\\t\\t\u2022 `abc`  \\n\\t\\t\u2022 `cde`  \\n\\t\\t\u2022 `cde`\n\n        formatted = [f\"\\n\\t\\t&amp;emsp; \u2022 `.{func}()`  \" for func in function_methods]\n        return \"\".join(formatted)\n\n    # Class docstrings variables for use in the structure chapter.\n    # (In code reference added automatically by mkdocstrings).\n    # Every class requires a docstring, otherwise mkdocs fails!\n    env.variables.docstring_up42 = indent(up42.__doc__)  # init module docstring\n    env.variables.docstring_catalog = indent(up42.catalog.Catalog.__doc__)\n    env.variables.docstring_tasking = indent(up42.tasking.Tasking.__doc__)\n    env.variables.docstring_order = indent(up42.order.Order.__doc__)\n    env.variables.docstring_storage = indent(up42.storage.Storage.__doc__)\n    env.variables.docstring_asset = indent(up42.asset.Asset.__doc__)\n    env.variables.docstring_webhooks = indent(up42.webhooks.Webhooks.__doc__)\n\n    # Class functions for reference and structure chapter\n    env.variables.funcs_up42 = get_methods(up42)\n    env.variables.funcs_catalog = get_methods(up42.catalog.Catalog)\n    env.variables.funcs_tasking = get_methods(up42.tasking.Tasking)\n    env.variables.funcs_order = get_methods(up42.order.Order)\n    env.variables.funcs_storage = get_methods(up42.storage.Storage)\n    env.variables.funcs_asset = get_methods(up42.asset.Asset)\n    env.variables.funcs_webhooks = get_methods(up42.webhooks.Webhooks)\n    env.variables.funcs_webhook = get_methods(up42.webhooks.Webhook)\n</pre> def define_env(env):     \"\"\"     This is the hook for defining variables, macros and filters.     \"\"\"      def indent(input_string: Optional[str]) -&gt; Optional[str]:         return input_string and input_string.replace(\"\\n\", \"\\n\\t\")      def get_methods(         c: Union[Callable, types.ModuleType],         exclude: Optional[List[str]] = None,     ) -&gt; List[str]:         \"\"\"         Gets all class methods and properties, excluding specifically excluded ones.          Args:                 c: The class object.                 exclude: Exclude specific methods.         \"\"\"         property_methods = [name for name, value in vars(c).items() if isinstance(value, property)]         function_methods = [             name             for name in dir(c)             if callable(getattr(c, name))             and not name.startswith(\"_\")             and not name.startswith(\"__\")             and not name[0].isupper()         ]          function_methods = function_methods + property_methods          if exclude:             function_methods = [f for f in function_methods if f not in exclude]          return function_methods      # pylint: disable=unused-variable     @env.macro     def format_funcs(function_methods: List[str]) -&gt; str:         \"\"\"         Formats a list of function names to a formatted list for         the \"Available Functionality\" box in the structure chapter.         \"\"\"         # Two tabs to stay within the tabbed code box.         # Requires Python linebreak and markdown linebreak (two spaces)!         # \"\\n\\t\\t\u2022 `abc`  \\n\\t\\t\u2022 `cde`  \\n\\t\\t\u2022 `cde`          formatted = [f\"\\n\\t\\t\u2003 \u2022 `.{func}()`  \" for func in function_methods]         return \"\".join(formatted)      # Class docstrings variables for use in the structure chapter.     # (In code reference added automatically by mkdocstrings).     # Every class requires a docstring, otherwise mkdocs fails!     env.variables.docstring_up42 = indent(up42.__doc__)  # init module docstring     env.variables.docstring_catalog = indent(up42.catalog.Catalog.__doc__)     env.variables.docstring_tasking = indent(up42.tasking.Tasking.__doc__)     env.variables.docstring_order = indent(up42.order.Order.__doc__)     env.variables.docstring_storage = indent(up42.storage.Storage.__doc__)     env.variables.docstring_asset = indent(up42.asset.Asset.__doc__)     env.variables.docstring_webhooks = indent(up42.webhooks.Webhooks.__doc__)      # Class functions for reference and structure chapter     env.variables.funcs_up42 = get_methods(up42)     env.variables.funcs_catalog = get_methods(up42.catalog.Catalog)     env.variables.funcs_tasking = get_methods(up42.tasking.Tasking)     env.variables.funcs_order = get_methods(up42.order.Order)     env.variables.funcs_storage = get_methods(up42.storage.Storage)     env.variables.funcs_asset = get_methods(up42.asset.Asset)     env.variables.funcs_webhooks = get_methods(up42.webhooks.Webhooks)     env.variables.funcs_webhook = get_methods(up42.webhooks.Webhook)"}]}