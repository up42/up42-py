version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.3

# variables
workspace: &workspace-dir /tmp/workspace

jobs:
  test:
    working_directory: *workspace-dir
    docker:
      - image: circleci/python:3.7
    steps:
      - attach_workspace:
          at: *workspace-dir
      - checkout
      - run:
          name: Install requirements
          command: |
            pip install -r requirements.txt
            pip install -r requirements-viz.txt
            pip install -r requirements-dev.txt
      - run:
          name: Runnning tests
          command: make test
      - store_artifacts:
          path: .coverage-reports/coverage.xml
      - store_artifacts:
          path: .coverage
      - persist_to_workspace:
          root: ./
          paths:
            - up42
            - .coverage-reports
            - .circleci
            - sonar-project.properties
  sonar:
    working_directory: *workspace-dir
    docker:
      - image: cimg/base:2021.04
    steps:
      - attach_workspace:
          at: *workspace-dir
      - sonarcloud/scan:
          sonar_token_variable_name: SONAR_TOKEN
  test_live:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Install requirements
          command: |
            pip install -r requirements.txt
            pip install -r requirements-viz.txt
            pip install -r requirements-dev.txt
      - run:
          name: Runnning tests
          command: python -m pytest --runlive --durations=5
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Installing packaging utils
          command: python -m pip install --user packaging twine
      - run:
          name: Build package
          command: make package
      - run:
          name: Upload to PyPi
          command: make upload


workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - sonar:
          context: sonarcloud
          requires:
            - test
      - hold_before_deploy:
          type: approval
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy:
          context: pypi-python-package-publishing
          requires:
            - hold_before_deploy
          filters:
            branches:
              only: master
  test_live:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - test_live:
          context: up42-py-live-testing